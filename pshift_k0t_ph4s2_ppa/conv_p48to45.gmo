;## This GMO code is intended to convert 102CH EMR Laygen cells to cells suitable for RFX/SPX extraction.  
;## It is assumed the starting cells have uncolored M0 and M2, no N-1 pins, correct and fully populated 
;## TC1 = (304:0) and TC2 = (305:0), contain tcnFlyover = (482:50), and have not had any TC1 depopulated.
;## 
;## The code was started from 108CH_rdvb_ext_view_20220311.gmo, but has been extensively modified.
;## It must be used with p1280_x80z.map to ensure all layers are available.
;##
;## Opens/issues:
;## 1) Should I depoulate TC1 under TC2 on stacked nodes (in addition to TC1 over EMR done here)?
;##



;#######################################
;## Constants                         ## 
;#######################################
Constant PP=450
Constant CH=1260

Constant BM0_width=900

Constant PL_ETE=140
Constant PL_W=120

Constant TCN_ETE=140
Constant TCN_W=130

Constant Z3_diff=470
Constant Z2_diff=380
Constant Z1_diff=300

Constant NP_Diff_Dist=160
Constant NP_Diffz2_Dist=250
Constant NP_Diffz1_Dist=330

Constant M0_ETE=160
Constant M0_W1=130  ;## M0C width; 126CH needs review
Constant M0_W2=130  ;## M0B width; 126CH needs review
Constant M0_space=120
Constant Min_M0_length=515  ;## 3*PP/2-M0_ETE

Constant M1_ETE=160
Constant M1_W=250
Constant M1_space=200
Constant Min_M1_length=470

Constant V1_inset_M1=25

Constant M2_W1_ETE=450  ;## M2B ETE
Constant M2_W2_ETE=280  ;## M2C_ETE
Constant M2_W1=140  ;## M2B width; 126CH needs review
Constant M2_W2=140  ;## M2C width; 126CH needs review
Constant M2_space=110
Constant Min_M2_W1_length=600  ;## M2B length
Constant Min_M2_W2_length=600  ;## M2C length

;## Sukru's Old Constants
;Constant M1_Plug_Pitch=540
;Constant Z1_diff=260
;Constant Z2_diff=260
;Constant M2_Plug_Pitch=2*PP
;Constant Min_Devflav_W=3*PP



;#######################################
;## Layer Definitions                 ## 
;#######################################
Type BND LayoutObject layer=chkBoundary_boundary

Type ND Wire layer=ndiff
Type NDfill Wire layer=ndiff_fill
Type PD Wire layer=pdiff
Type PDfill Wire layer=pdiff_fill
Group DIFF {ND, NDfill, PD, PDfill}

Type PL Wire layer=poly orient=V
Type PLpin Wire layer=poly_pin orient=V
Type PLdummy Wire layer=poly_dummy orient=V
Type PLfill Wire layer=poly_fill orient=V
;Type PLplug Plug layer=poly orient=V

Type PCR Wire layer=pcr_id orient=V

;## This is metal gate cut associated with gva(drawing) = (385:0)
Type MGC Wire layer=gva

;## These have been replaced by: 
;##   tcn(drawing) (5:0) --> tc1 (304:0)
;##   tcn(fill) (5:250) --> tc2 (305:0)
;##   tcn(pin) (5:2) --> tc2(pin) (305:2)
;##
;## Old definitions kept only for data integrity checking:
Type TCN Wire layer=tcn orient=V
Type TCNpin Wire layer=tcn_pin orient=V
Type TCNfill Wire layer=tcn_fill orient=V
;Type TCNplug Plug layer=tcn orient=V
;## New definitions:
Type TC1 Wire layer=tc1 orient=V
Type TC1pin Wire layer=tc1_pin orient=V
Type TC1fill Wire layer=tc1_fill orient=V
Type TC2 Wire layer=tc2 orient=V
Type TC2pin Wire layer=tc2_pin orient=V
Type TC2fill Wire layer=tc2_fill orient=V

Type TCNflyover Wire layer=tcnFlyover_id orient=V
Type TCR1 Wire layer=tcr1_id orient=V
Type TCR2 Wire layer=tcr2_id orient=V 

;Type DVBD Wire layer=dvb orient=H
;Type DVBkor Wire layer=dvb_blockage orient=H
;Type dvbPin Wire layer=dvb_pin orient=H
;Type DVBP Wire layer=dvb_pwr orient=H

Type EMR Wire layer=emr orient=V

Type FTI Wire layer=fti orient=V
;Type FTIfill Wire layer=fti_fill orient=V

Type SDG Wire layer=sdGen orient=V

Type ViaG Via layer=vg
Type Vgkor Via layer=vg_blockage
Type Vgpin Via layer=vg_pin

Type ViaT Via layer=vt
Type Vtkor Via layer=vt_blockage
Type Vtpin Via layer=vt_pin

;Type VCPD Wire layer=vcp orient=H
;Type VCPkor Wire layer=vcp_blockage orient=H
;Type VCPP Wire layer=vcp_pwr orient=H

Type BM0 Wire layer=bm0 orient=H
Type BM0kor Wire layer=bm0_blockage orient=H
Type BM0pin Wire layer=bm0_pin orient=H

Type M0 Wire layer=m0 orient=H
Type M0kor Wire layer=m0_blockage orient=H
Type M0pin Wire layer=m0_pin orient=H
Type M0fill Wire layer=m0_fill orient=H
;Type M0plug Plug layer=m0 orient=H

Type M0B Wire layer=m0_color1 orient=H
Type M0Bkor Wire layer=m0_color1_blockage orient=H
Type M0Bpin Wire layer=m0_color1_pin orient=H
Type M0Bfill Wire layer=m0_color1_fill orient=H

Type M0C Wire layer=m0_color2 orient=H
Type M0Ckor Wire layer=m0_color2_blockage orient=H
Type M0Cpin Wire layer=m0_color2_pin orient=H
Type M0Cfill Wire layer=m0_color2_fill orient=H

;Type M0P Wire layer=m0_pwr orient=H
;Type M0Pkor Wire layer=m0_pwr_blockage orient=H
;Type M0Ppin Wire layer=m0_pwr_pin orient=H

Type V0 Via layer=v0
Type V0kor Via layer=v0_blockage
Type V0pin Via layer=v0_pin
;Type V0P Via layer=v0_pwr

Type M1 Wire layer=m1 orient=V
Type M1kor Wire layer=m1_blockage orient=V
Type M1pin Wire layer=m1_pin orient=V
;Type M1pinplug Plug layer=m1_pin orient=V

Type M1P Wire layer=m1_pwr orient=H
Type M2P Wire layer=m2_pwr orient=H

Type V1 Via layer=v1
Type V1kor Via layer=v1_blockage
Type V1pin Via layer=v1_pin
;Type V1P Via layer=v1_pwr

Type M2 Wire layer=m2 orient=H
Type M2kor Wire layer=m2_blockage orient=H
Type M2pin Wire layer=m2_pin orient=H

Type M2B Wire layer=m2_color1 orient=H
Type M2Bkor Wire layer=m2_color1_blockage orient=H
Type M2Bpin Wire layer=m2_color1_pin orient=H

Type M2C Wire layer=m2_color2 orient=H
Type M2Ckor Wire layer=m2_color2_blockage orient=H
Type M2Cpin Wire layer=m2_color2_pin orient=H

;Type M3 Wire layer=m3 orient=V
;Type M3 Wire layer=m3 orient=H  Sukru's version...

Type SLIE0 Wire layer=sliE0_APRannotation orient=H
Type SLIE1 Wire layer=sliE1_APRannotation orient=V
Type SLIE2 Wire layer=sliE2_APRannotation orient=H

Type N1 LayoutObject layer=devflav_n1_id shape=polygon
Type N2 LayoutObject layer=devflav_n2_id shape=polygon
Type N3 LayoutObject layer=devflav_n3_id shape=polygon
Type N5 LayoutObject layer=devflav_n5_id shape=polygon
Type P1 LayoutObject layer=devflav_p1_id shape=polygon
Type P2 LayoutObject layer=devflav_p2_id shape=polygon
Type P3 LayoutObject layer=devflav_p3_id shape=polygon
Type P5 LayoutObject layer=devflav_p5_id shape=polygon
Group IDL {N1, N2, N3, N5, P1, P2, P3, P5}

;## Various region id/types
;Type ppregion LayoutObject layer=p45Region_id shape=polygon

Type devTypeD Wire layer=devTypeD_id orient=H
Type lvsExactMatch Wire layer=lvsExactMatch_id orient=H
Type stdCellLibrary Wire layer=stdCellLibrary_id orient=H
Type p45Region Wire layer=p45Region_id orient=H
Type p48Region Wire layer=p48Region_id orient=H

Type b108hRegionDVB Wire layer=b108hRegionDVB_id orient=H
Type b108hRegionEMR Wire layer=b108hRegionEMR_id orient=H
Type b102hRegionEMR Wire layer=b102hRegionEMR_id orient=H

Group AllVia {ViaT, ViaG, V0}
Group DeviceVia {ViaT, ViaG}
Group M1allVia {V0, V1}

Group BM0all {BM0, BM0kor, BM0pin}
Group M0all {M0, M0kor, M0pin}
Group M0Ball {M0B, M0Bkor, M0Bpin}
Group M0Call {M0C, M0Ckor, M0Cpin}
Group V0all {V0, V0kor, V0pin}
Group M1all {M1, M1kor, M1pin}
Group V1all {V1, V1kor, V1pin}
Group M2all {M2, M2kor, M2pin}



;#######################################
;## Grid Definitions                  ## 
;#######################################
Grid ndiff_grid period=CH*2 offset=0 pitches={CH/2-NP_Diff_Dist/2-Z3_diff/2, 2*CH-(CH/2-NP_Diff_Dist/2-Z3_diff/2)} orient=H
Grid pdiff_grid period=CH*2 offset=0 pitches={CH/2+NP_Diff_Dist/2+Z3_diff/2, 2*CH-(CH/2+NP_Diff_Dist/2+Z3_diff/2)} orient=H
Grid poly_grid period=PP offset=0 orient=V
Grid tcn_grid period=PP offset=0 pitches={PP/2} orient=V

;## Cell height-related grids
Grid midCH_grid period=CH offset=0 pitches={CH/2} orient=H
Grid CH_grid period=CH offset=0 orient=H
Grid QuarterCH_Grid period=CH*2 offset=0 pitches={CH/4, 2*CH-CH/4} orient=H
Grid TriQuarterCH_Grid period=CH*2 offset=0 pitches={3*CH/4, 2*CH-3*CH/4} orient=H

;## M0 grid definitions
Grid M0C_y_grid period=CH offset=0 pitches={0,CH/2} orient=H
Grid M0B_y_grid period=CH offset=0 pitches={M0_W1/2+M0_space+M0_W2/2,CH-(M0_W1/2+M0_space+M0_W2/2)} orient=H
Grid M0all_y_grid period=CH offset=0 pitches={0,M0_W1/2+M0_space+M0_W2/2,CH/2,CH-(M0_W1/2+M0_space+M0_W2/2)} orient=H

;## These M0B_x?_grid are crudely defined with an offset, so checks using them likely require flip=false
;## M0B_xl_grid xl = 8,30.5,53,75.5,98,120.5,143,165.5,188,210.5,233,255.5,278,300.5,323,... 8+N*22.5 nm
Grid M0B_xl_grid period=PP/2 offset=80 pitches={0} orient=V
;## M0B_xh_grid xh = 82,104.5,127,149.5,172,194.5,217,239.5,262,284.5,307,329.5,352,374.5,397,... 82+N*22.5 nm
Grid M0B_xh_grid period=PP/2 offset=820 pitches={0} orient=V

;## These M0C_x?_grid are crudely defined with an offset, so checks using them likely require flip=false
;## M0C_xl_grid xl = 8,30.5,53,75.5,98,120.5,143,165.5,188,210.5,233,255.5,278,300.5,323,... 8+N*22.5 nm
Grid M0C_xl_grid period=PP/2 offset=80 pitches={0} orient=V
;## M0B_xh_grid xh = 82,104.5,127,149.5,172,194.5,217,239.5,262,284.5,307,329.5,352,374.5,397,... 82+N*22.5 nm
Grid M0C_xh_grid period=PP/2 offset=820 pitches={0} orient=V

;## M1 grid definitions
Grid M1_x_grid period=PP offset=0 pitches={PP/2} orient=V

;## Centerlines of M1 spaces: 0, 450, 900, 1350, ...
Grid M1_x_space_grid period=450 offset=0 orient=V

;## M2B @ 15 wide, 11 space, 45 min length, 45 min ETE, 10 min V1 enclosure
;## M2C @ 14 wide, 11 space, 62 min length, 28 min ETE, 15 min V1 enclosure
;## M2B lines are @ y=0, CH/2, CH, and the M2C lines are @ the midpoints between these. 

;## M2 grid definitions
Grid M2B_y_grid period=CH offset=0 pitches={0,CH/2} orient=H
Grid M2C_y_grid period=CH offset=0 pitches={M2_W1/2+M2_space+M2_W2/2,CH-(M2_W1/2+M2_space+M2_W2/2)} orient=H
Grid M2all_y_grid period=CH offset=0 pitches={0,M2_W1/2+M2_space+M2_W2/2,CH/2,CH-(M2_W1/2+M2_space+M2_W2/2)} orient=H

;## Centerlines of M2 spaces
Grid M2_y_space_grid period=CH offset=0 pitches={M2_W1/2+M2_space/2, M2_W1/2+3*M2_space/2+M2_W2, CH-(M2_W1/2+3*M2_space/2+M2_W2), CH-(M2_W1/2+M2_space/2)} orient=H

;## These M2B_x?_grid are crudely defined with an offset, so checks using them likely require flip=false
;## M2B_xl_grid xl = 45,90,135,180,225,270,315,... 45+N*45 nm
Grid M2B_xl_grid period=PP offset=450 pitches={0} orient=V
;## M2B_xh_grid xh = 90,135,180,225,270,315,360,... 90+N*45 nm
Grid M2B_xh_grid period=PP offset=900 pitches={0} orient=V

;## These M2C_x?_grid are crudely defined with an offset, so checks using them likely require flip=false
;## M2C_xl_grid xl = 36.5,81.5,126.5,171.5,216.5,261.5,306.5,... 36.5+N*45 nm
Grid M2C_xl_grid period=PP offset=365 pitches={0} orient=V
;## M2C_xh_grid xh = 98.5,143.5,188.5,233.5,278.5,323.5,368.5,... 98.5+N*45 nm
Grid M2C_xh_grid period=PP offset=985 pitches={0} orient=V

;## So far, this M3 grid definition is only used by code that converts Laygen cells to extraction cells
Grid M3_grid period=PP offset=0 pitches={PP/2} orient=V

;## Define grids for where poly can legally end relative to the CRL (Cell Reference Line)
;## lower y edge of a poly ETE bisected by the CRL
Grid Poly_CRL_ETE_yl_grid period=CH offset=0 pitches={CH-(PL_ETE/2)} orient=H
;## upper y edge of a poly ETE bisected by the CRL 
Grid Poly_CRL_ETE_yh_grid period=CH offset=0 pitches={PL_ETE/2} orient=H 

;## Define grids for where poly can legally end relative to the DKA (Diffusion Keep Away)
;## lower y edge of a poly ETE bisected by the DKA
Grid Poly_DKA_ETE_yl_grid period=CH offset=0 pitches={(CH/2)-(PL_ETE/2)} orient=H
;## upper y edge of a poly ETE bisected by the DKA
Grid Poly_DKA_ETE_yh_grid period=CH offset=0 pitches={(CH/2)+(PL_ETE/2)} orient=H 

;## Define grids for where BM0 can legally end relative to the CRL (Cell Reference Line)
;## lower y edge of a BM0 centered on the CRL
Grid BM0_yl_grid period=CH offset=0 pitches={CH-(BM0_width/2)} orient=H
;## upper y edge of a BM0 centered on the CRL 
Grid BM0_yh_grid period=CH offset=0 pitches={BM0_width/2} orient=H 

;############################################################################################################
;;## Transformations                   ## 
;;## Removes TC1,TCR1. Moves TC2 to TCN. Moves TCR2 to new layer TCR. Assigns label to TCN shape. 
;############################################################################################################

Transform P48_to_P45Region
flip=false
AND
  a p48Region
  Modify a layer=p45Region_id

